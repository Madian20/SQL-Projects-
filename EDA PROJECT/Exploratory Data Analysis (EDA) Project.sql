-- explore all objects in the database
SELECT * FROM INFORMATION_SCHEMA.TABLES;

-- explore all columns in the database
SELECT * FROM INFORMATION_SCHEMA.COLUMNS;

-- explore all countries our customers come from 
SELECT DISTINCT country FROM gold.dim_customers;

-- explore all categories 'THE MAJOR DIVISIONS'
SELECT DISTINCT category,subcategory,product_name FROM gold.dim_products ORDER BY 1,2,3;

-- the date of the first and last order
SELECT MIN(order_date) AS [First Date] , MAX(order_date) AS [Last Date],

-- haw many years of sales are available
DATEDIFF(year,MIN(order_date),MAX(order_date)) AS [Order Range Years]
FROM gold.fact_sales;

-- the youngest and the oldest customer
SELECT 
DATEDIFF(year,MIN(birthdate),GETDATE()) AS [Oldest Customer],
DATEDIFF(year,MAX(birthdate),GETDATE()) AS [Youngest Customer]
FROM gold.dim_customers;

-- the total sales 
SELECT SUM(sales_amount) [Total Sales] FROM gold.fact_sales;

-- how many items are sold
SELECT SUM(quantity) [Total Quantity] FROM gold.fact_sales;

-- the average selling price 
SELECT AVG(price) [Average Price] FROM gold.fact_sales;

-- the total numbers of orders
SELECT count(DISTINCT order_number) [Total Orders] FROM gold.fact_sales;

-- the total numbers of products
SELECT count(DISTINCT product_name) [Total Products] FROM gold.dim_products;

-- the total numbers of customers
SELECT count(customer_key) [Total Customers] FROM gold.dim_customers;

-- the total numbers of customers that has placed an order
SELECT count(DISTINCT customer_key) [Total Customers] FROM gold.fact_sales;

-- the total customers by countries
SELECT
 country
 ,COUNT(customer_key) [Total Customers] 
FROM gold.dim_customers
GROUP BY country
ORDER BY [Total Customers] DESC;

-- the total customers by gender
SELECT
 gender
 ,COUNT(customer_key) [Total Customers] 
FROM gold.dim_customers
GROUP BY gender
ORDER BY [Total Customers] DESC;

-- the total products by category
SELECT
 category
 ,COUNT(product_key) [Total Products] 
FROM gold.dim_products
GROUP BY category
ORDER BY [Total Products] DESC;

-- the average costs in eash category
SELECT
 category
 ,AVG(cost) [Average Costs] 
FROM gold.dim_products
GROUP BY category
ORDER BY [Average Costs] DESC;

-- the total revenue generated for eash category
SELECT
 p.category
 ,SUM(f.sales_amount) [Total Revenue]
FROM gold.fact_sales f
LEFT JOIN gold.dim_products p ON p.product_key = f.product_key
GROUP BY category
ORDER BY [Total Revenue] DESC;

-- the total revenue generated by eash customer
SELECT
 c.customer_id
 ,c.first_name
 ,c.last_name
 ,SUM(f.sales_amount) [Total Revenue]
FROM gold.fact_sales f
LEFT JOIN gold.dim_customers c ON c.customer_key = f.customer_key
GROUP BY 
 customer_id
 ,c.first_name
 ,c.last_name
ORDER BY [Total Revenue] DESC;

-- the distribution of sold items across countries
SELECT
 c.country
 ,SUM(f.quantity) [Total Quantity]
FROM gold.fact_sales f
LEFT JOIN gold.dim_customers c ON c.customer_key = f.customer_key
GROUP BY C.country
ORDER BY [Total Quantity] DESC;

-- top 5 products by revenue 
SELECT TOP 5
 p.product_name
 ,SUM(f.sales_amount) [Total Revenue]
FROM gold.fact_sales f
LEFT JOIN gold.dim_products p ON p.product_key = f.product_key
GROUP BY p.product_name
ORDER BY [Total Revenue] DESC;
/*OR*/
SELECT TOP 5
 *
FROM (
    SELECT
    p.product_name
    ,SUM(f.sales_amount) [Total Revenue]
    ,ROW_NUMBER() OVER(ORDER BY SUM(f.sales_amount) DESC) [Rank Products]
    FROM gold.fact_sales f
    LEFT JOIN gold.dim_products p ON p.product_key = f.product_key
    GROUP BY p.product_name
 )t

-- worst 5 products by Revenue
SELECT TOP 5
 p.product_name
 ,SUM(f.sales_amount) [Total Revenue]
FROM gold.fact_sales f
LEFT JOIN gold.dim_products p ON p.product_key = f.product_key
GROUP BY p.product_name
ORDER BY [Total Revenue];
/*OR*/
SELECT 
 *
FROM (
    SELECT
    p.product_name
    ,SUM(f.sales_amount) [Total Revenue]
    ,ROW_NUMBER() OVER(ORDER BY SUM(f.sales_amount) ASC) [Rank Products]
    FROM gold.fact_sales f
    LEFT JOIN gold.dim_products p ON p.product_key = f.product_key
    GROUP BY p.product_name
 )t
 WHERE [Rank Products] <= 5
